name: Code CI

on:
  push:
    branches:
      # Restricting to these branches and tags stops duplicate jobs on internal
      # PRs but stops CI running on internal branches without a PR. Delete the
      # next 5 lines to restore the original behaviour
      - master
      - main
    tags:
      - "*"
  pull_request:
  schedule:
    # Run every Monday at 8am to check latest versions of dependencies
    - cron: "0 8 * * MON"

jobs:
  make-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GitHub Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build runtime image
        uses: docker/build-push-action@v2
        with:
          context: docker
          push: ${{ github.event_name != 'pull_request' }}
          build-args: BASE=python:3.10-slim
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  release:
    needs: [make-container]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: make release scripts
        run: |
          # create version specific launcher and devcontainer
          version=${GITHUB_REF#refs/*/}
          sed  's/\(^ *"image".*\)\(latest\)/\1'"${version}"/ .devcontainer.json > /tmp/devcontainer.json
          sed  's/\(version=.*\)\(latest\)/\1'"${version}"/ run-dev-c7.sh > /tmp/run-dev-c7.sh

      - name: Github Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 # v0.1.14
        with:
          files: |
            /tmp/devcontainer.json
            /tmp/run-dev-c7.sh
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
